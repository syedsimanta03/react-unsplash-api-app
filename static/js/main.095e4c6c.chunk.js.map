{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceholder","get","sent","type","payload","data","stop","_x3","apply","this","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","chain","uniq","forEach","value","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.095e4c6c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com'\r\n});\r\n","import _ from 'lodash';\r\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n\r\n  _.chain(getState().posts)\r\n    .map('userId')\r\n    .uniq()\r\n    .forEach(id => dispatch(fetchUser(id)))\r\n    .value();\r\n};\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const response = await jsonPlaceholder.get('/posts');\r\n\r\n  dispatch({ type: 'FETCH_POSTS', payload: response.data });\r\n};\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n  const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n  dispatch({ type: 'FETCH_USER', payload: response.data });\r\n};\r\n\r\n// export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\r\n// const _fetchUser = _.memoize(async (id, dispatch) => {\r\n//   const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n//   dispatch({ type: 'FETCH_USER', payload: response.data });\r\n// });\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    return <div className=\"header\">{user.name}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { user: state.users.find(user => user.id === ownProps.userId) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHeader);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUsers } from '../actions';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchPostsAndUsers();\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.posts.map(post => {\r\n      return (\r\n        <div className=\"item\" key={post.id}>\r\n          <i className=\"large middle aligned icon user\" />\r\n          <div className=\"content\">\r\n            <div className=\"description\">\r\n              <h2>{post.title}</h2>\r\n              <p>{post.body}</p>\r\n            </div>\r\n            <UserHeader userId={post.userId} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { posts: state.posts };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPostsAndUsers }\r\n)(PostList);\r\n","import React from 'react';\r\nimport PostList from './PostList';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <PostList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer\r\n});\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_POSTS':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_USER':\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}